{:system/env
 #profile {:dev :dev
           :test :test
           :prod :prod}

 :server/http
 {:port #long #or [#env PORT 3000]
  :host #or [#env HTTP_HOST "0.0.0.0"]
  :handler #ig/ref :handler/ring}

 :storage/s3
{:bucket #or [#env S3_BUCKET "tsuribori-zinemite"]
 :creds {:access-key #or [#env S3_ACCESS_KEY ""]
         :secret-key #or [#env S3_SECRET_KEY ""]
         :endpoint #or [#env S3_ENDPOINT "https://s3.amazonaws.com"]}}
 
 :handler/ring
 {:router #ig/ref :router/core
  :api-path "/api"
  :cookie-secret #or [#env COOKIE_SECRET "QUIYMEAFIPVZEPCS"]
  ;; from ring.middleware.defaults. anti-forgery `false` by default because services may not require it
  :site-defaults-config {:params {:urlencoded true
                                  :multipart true
                                  :nested true
                                  :keywordize true}
                         :cookies true
                         :session {:flash true
                                   :cookie-name "tsuribori.zinemite"
                                   :cookie-attrs {:max-age 86400
                                                  :http-only true
                                                  :same-site :strict}}
                         :security {:anti-forgery false
                                    :xss-protection {:enable? true,
                                                     :mode :block}
                                    :frame-options :sameorigin
                                    :content-type-options :nosniff}
                         :static {:resources "public"}
                         :responses {:not-modified-responses true
                                     :absolute-redirects true
                                     :content-types true
                                     :default-charset "utf-8"}}}

 :reitit.routes/api
 {:base-path "/api"
  :env #ig/ref :system/env}

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes}
 :reitit.routes/pages {:base-path "",
                       :query-fn #ig/ref :db.sql/query-fn,
                       :s3 #ig/ref :storage/s3,
                       :env #ig/ref :system/env
                       :base-url #or [#env BASE_URL "http://localhost:3000"]
                       :footer-content #or [#env FOOTER_CONTENT "<p class='text-muted'>No contact specified!</p>"]
                       :title-schema [:string {:min 1 :max 300}]
                       :file-schema [:map
                                      [:size-in-mb [:< #long #or [#env MAX_FILE_SIZE 20]]]
                                      [:mime-type [:enum "application/pdf"]]
                                      [:tempfile :any]
                                      [:extension [:enum ".pdf"]]]}
 :db.sql/query-fn {:conn #ig/ref :db.sql/connection,
                   :options {},
                   :filename "sql/queries.sql"}
 :db.sql/migrations {:store :database,
                     :db {:datasource #ig/ref :db.sql/connection},
                     :migrate-on-init? true}
 :db.sql/connection #profile {:dev {:jdbc-url "jdbc:sqlite:zinemite_dev.db"},
                              :test {:jdbc-url "jdbc:sqlite:zinemite_test.db"},
                              :prod {:jdbc-url #env JDBC_URL}}}